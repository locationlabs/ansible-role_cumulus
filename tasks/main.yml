- name: Enable/Disable DOS protection
  lineinfile:
    dest: /etc/cumulus/datapath/traffic.conf
    regexp: '^dos_enable'
    line: "dos_enable = {{ cumulus_dos_enable|lower }}"
  notify: restart switchd

- name: Configure DOS protection
  lineinfile:
    dest: "{{ cumulus_datapath_conf_file }}"
    regexp: "^dos.{{ item.check }}"
    line: "dos.{{ item.check }} = {{ item.value }}"
  with_items: "{{ cumulus_datapath_conf }}"
  notify: restart switchd
  when: cumulus_dos_enable

- name: Configure breakout ports
  lineinfile:
    dest: /etc/cumulus/ports.conf
    regexp: "^{{item.key}}="
    line: "{{ item.key }}={{ item.value|is_member_of(cumulus_breakout_values) }}"
  with_dict: "{{ config.ports|default({}) }}"
  notify: restart switchd
  when: ansible_product_name in cumulus_breakout_allowed and config.ports is defined

- import_tasks: acl.yml

# TODO: Find out if leaving an empty file here will cause any problems
- name: Configure system-wide port policies
  copy:
    content: "{{ config.port_policy|default({})|to_nice_json }}"
    dest: /etc/network/ifupdown2/policy.d/port_policy.json
  notify: reload networking

- name: Write configuration fragments
  template:
    src="{{ item.name }}.j2"
    dest="/etc/network/interfaces.d/{{ item.order }}-{{ item.name }}.fragment"
  with_items:
    - { name: 'header', order: '00' }
    - { name: 'interfaces', order: '10' }
    - { name: 'bonds', order: '20' }
    - { name: 'bridges', order: '30' }

- name: Assemble configuration fragments into /etc/network/interfaces
  assemble:
    src=/etc/network/interfaces.d
    dest=/etc/network/interfaces
    regexp='\\.fragment$'
    backup=yes
    delimiter=' '
  notify: reload networking
